<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on Eduardo Weiland</title><link>https://eduardoweiland.info/tags/javascript/</link><description>Recent content in javascript on Eduardo Weiland</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><lastBuildDate>Wed, 12 May 2021 14:09:49 -0300</lastBuildDate><atom:link href="https://eduardoweiland.info/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Adicionando eslint-disable nos arquivos com erros</title><link>https://eduardoweiland.info/posts/2021/05/adicionando-eslint-disable-nos-arquivos-com-erros/</link><pubDate>Wed, 12 May 2021 14:09:49 -0300</pubDate><guid>https://eduardoweiland.info/posts/2021/05/adicionando-eslint-disable-nos-arquivos-com-erros/</guid><description>Recentemente eu precisei atualizar um projeto em Ember que estava na vers√£o 3.6 (bem desatualizado) para a vers√£o 3.24 (atual LTS). Para quem conhece o Ember, sabe que muita coisa mudou entre essas vers√µes (Glimmer, classes nativas etc.). E, com as altera√ß√µes, o Ember tamb√©m atualizou o plugin para o ESLint, incluindo novas regras para identificar c√≥digo antigo e refor√ßar as novas boas pr√°ticas.
Mas, mesmo com tantas altera√ß√µes, quase todo o c√≥digo antigo ainda segue funcionando (exceto onde APIs privadas eram utilizadas ü§∑), gra√ßas ao Semantic Versioning.</description></item></channel></rss>